[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'jiangmiao/auto-pairs'
# repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
    let g:airline#extensions#coc#enabled = 0
    let airline#extensions#coc#error_symbol = 'Error:'
    let airline#extensions#coc#warning_symbol = 'Warning:'
    let airline#extensions#coc#stl_format_err = '%E{[%e(#%fe)]}'
    let airline#extensions#coc#stl_format_warn = '%W{[%w(#%fw)]}'
'''

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
depends = ['nerdtree']
hook_add = '''
    " Ctrl+Nで起動
    map <C-n> <plug>NERDTreeTabsToggle<CR>

    " 起動時に有効化
    let g:nerdtree_tabs_open_on_console_startup=1

    "引数なしでvimを開いたらNERDTreeを起動、
    "引数ありならNERDTreeは起動しない、引数で渡されたファイルを開く。
    autocmd vimenter * if !argc() | NERDTree | endif

    "他のバッファをすべて閉じた時にNERDTreeが開いていたらNERDTreeも一緒に閉じる。
    autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'

# カラースキーム系1
[[plugins]]
repo = 'jacoborus/tender.vim'

# カラースキーム系2
[[plugins]]
repo = 'ulwlu/elly.vim'

# カラースキーム系3
[[plugins]]
repo = 'nanotech/jellybeans.vim'

# カラースキーム系4
[[plugins]]
repo = 'folke/tokyonight.nvim'

# コメントアウトしてくれるやつ
[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
    nmap <C-_> <Plug>(caw:hatpos:toggle)
    vmap <C-_> <Plug>(caw:hatpos:toggle)
'''

# [[plugins]]
# repo = 'nvim-treesitter/nvim-treesitter'
# merged = 0
# hook_post_update: 'TSUpdate'
# hook_source = '''
# lua <<EOF
# require'nvim-treesitter.configs'.setup {
#   highlight = {
#     enable = true,
#   },
#   indent = {
#     enable = true, -- これを設定することでtree-sitterによるインデントを有効にできます
#   },
# }
# EOF
# '''
